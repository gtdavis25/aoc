// Code generated by github.com/gtdavis25/aoc generate. DO NOT EDIT.
package main

import (
	"github.com/gtdavis25/aoc/solver"

	year2024day01 "github.com/gtdavis25/aoc/2024/day01"
	year2024day02 "github.com/gtdavis25/aoc/2024/day02"
	year2024day03 "github.com/gtdavis25/aoc/2024/day03"
	year2024day04 "github.com/gtdavis25/aoc/2024/day04"
	year2024day05 "github.com/gtdavis25/aoc/2024/day05"
)

type SolverFactory func(solver.Params) solver.Interface

var Solvers = map[int]map[int]SolverFactory{
	2024: {
		1: func(params solver.Params) solver.Interface {
			return year2024day01.NewSolver(params)
		},
		2: func(params solver.Params) solver.Interface {
			return year2024day02.NewSolver(params)
		},
		3: func(params solver.Params) solver.Interface {
			return year2024day03.NewSolver(params)
		},
		4: func(params solver.Params) solver.Interface {
			return year2024day04.NewSolver(params)
		},
		5: func(params solver.Params) solver.Interface {
			return year2024day05.NewSolver(params)
		},
	},
}

func GetSolver(year, day int, params solver.Params) solver.Interface {
	if _, ok := Solvers[year]; !ok {
		return nil
	}

	if _, ok := Solvers[year][day]; !ok {
		return nil
	}

	return Solvers[year][day](params)
}
